<?xml version="1.0" encoding="utf-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta name="author" content="Marc Hoyois"/>
	<title>ClickToPlugin Help</title>
	<link rel="stylesheet" href="../../styles.css"/>
</head>
<body id="top">
<header>
<h1>ClickToPlugin Help</h1>
<nav>
<h3 class="offscreen">Navigation</h3>
<a href="../../">Home</a> &gt; <a href="./">ClickToPlugin &amp; ClickToFlash</a> &gt; <a>Help</a>
<nav>
<h4>Contents</h4>
<ul>
	<li><a href="#faq">FAQ</a></li>
	<li><a href="#common_issues">Solutions to common issues</a></li>
	<li><a href="#known_bugs">Known bugs</a></li>
	<li><a href="#safari_bugs">Safari bugs</a></li>
</ul>
</nav>
</nav>
</header>

<section id="faq">
<header>
<h2>FAQ</h2>
<div class="toplink"><a href="#top">To the top</a></div>
</header>

<h4 id="faq_uninstall" class="question">How do I uninstall ClickToPlugin?</h4>
<p class="answer">Open Safari’s preferences from the Safari menu in the menu bar; click on the Extensions tab, then click on ClickToPlugin in the left column; finally, click the Uninstall button in the right-hand pane.</p>

<h4 id="faq_preference_access" class="question">How do I access ClickToPlugin’s preferences?</h4>
<p class="answer">There are three ways to access ClickToPlugin’s preference pane:</p>
<ul>
	<li>From <b>Safari’s preferences</b>: open Safari’s preferences from the Safari menu in the menu bar; click on the Extensions tab, then click on ClickToPlugin in the left column; finally, click on the checkbox labeled “Click this checkbox to access the settings”.</li>
	<li>From the <b>shortcut menu</b> (or contextual menu): right-click on any web page and choose “ClickToPlugin Preferences…” from the shortcut menu. This menu command will not appear if you have disabled it from within ClickToPlugin’s preferences.</li>
	<li>Using a <b>keyboard shortcut</b>: within ClickToPlugin’s preferences you can set a keyboard shortcut to open the preferences. By default, this keyboard shortcut is <kbd>⌥,</kbd> (Option-Comma).</li>
</ul>
<p>Starting with Safari 7, the last two methods only work on web pages whose security policy allows the loading of iframes.</p>

<h4 id="faq_clicktoflash" class="question">Should I use ClickToPlugin and/or ClickToFlash?</h4>
<p class="answer">You should not use both, and there is no reason to use ClickToFlash instead of ClickToPlugin. No matter what your intended usage is, ClickToFlash will not be more efficient than ClickToPlugin. ClickToFlash only exists for historical reasons.</p>

<h4 id="faq_installedplugins" class="question">Does the replacement of plug-ins by HTML5 require these plug-ins to be installed?</h4>
<p class="answer">No. However, websites can check if your browser supports a given plug-in, and change the page accordingly. For example, Facebook does not insert the Flash player into the page unless Flash is enabled, so there’s nothing for ClickToPlugin to replace.</p>

<h4 id="faq_wildcards" class="question">Can I use wild cards in the whitelists?</h4>
<p class="answer">All whitelist-like text fields in the preferences support regular expressions. For a string to be considered as a regular expression, it must be preceded by the <code>@</code> symbol. These regular expressions must follow the Javascript syntax (in particular, lookbehinds are not supported). Invalid regular expressions are ignored.</p>

<h4 id="faq_prefpane" class="question">Can you move the extension’s preferences back to the dedicated area in Safari’s preferences?</h4>
<p class="answer">Not until all of the following are possible within that dedicated area: language localization; displaying the list of installed plug-ins; customizable keyboard shortcuts; multiline text areas.</p>

<h4 id="faq_html5replacements" class="question">Can you add HTML5 replacements for …?</h4>
<p class="answer">I will not add killers to the extension from now on. Extra killers and instructions to make new ones can be found <a href="killers.xhtml">here</a>.</p>

<h4 id="faq_invisible" class="question">Why would I want to allow invisible plug-ins?</h4>
<p class="answer">“Invisible plug-ins” refer to plug-in objects so small that they are difficult to see or click. Sometimes such objects provide important functionality for a web page, so allowing them automatically may be convenient. However, for security and privacy reasons, automatically allowing invisible plug-ins on arbitrary pages is not recommended: they are often used to spy on your browsing habits and can store cookies that bypass any of the browser’s privacy settings. Moreover, it is possible for a plug-in object to be small at first but grow once it is loaded.</p>

<h4 id="faq_sunspider" class="question">Why does ClickToPlugin slow down the SunSpider Javascript benchmark?</h4>
<p class="answer">This is a <a href="#safari_bugs">bug in Safari</a> which affects all extensions that use messaging from the global page to content scripts. It does not indicate that there is something wrong with these extensions, nor that they have a negative effect on Safari’s performance in real-life usage.</p>

<p>In the case of ClickToPlugin, removing the unique listener to <code>message</code> events from the content scripts (which is not needed for ClickToPlugin’s core functionality) results in a SunSpider benchmark which is identical to that obtained with no extensions.</p>

<h4 id="faq_youtubesafari8" class="question">What’s up with YouTube in Safari 8+?</h4>
<p class="answer">Starting from Safari 8, YouTube is completely Flash-free. As a result, ClickToPlugin should have no effect on YouTube. Nevertheless, by popular request, the YouTube killer in ClickToPlugin includes a hack that forces YouTube to offer the old Flash player. This has the following consequences:</p>
<ul>
	<li>If you prefer the default YouTube experience, remove the YouTube killer from the list of killers in ClickToPlugin’s preferences (you must <em>restart Safari</em> for this to take effect).</li>
	<li>If you use the AdBlock extension, be sure to enable the ClickToFlash compatibility mode as follows: AdBlock button &gt; Options &gt; General &gt; Enable ClickToFlash compatibility mode.</li>
	<li>This hack may conflict with other YouTube-hacking extensions.</li>
</ul>

<h4 id="faq_youtubehtml5" class="question">Why is the performance of YouTube’s own HTML5 player in Safari &lt; 6 significantly worse than ClickToPlugin’s or even than Flash?</h4>
<p class="answer">Because you have Perian installed and YouTube’s HTML5 player uses the WebM version of the video instead of the H.264 version when possible. YouTube does not provide a way to choose the H.264 version, but this can be done using a custom script such as <a href="http://hoyois.github.io/safariextensions/universalextension/#webm_disabler">this one</a> or by upgrading to Safari 6 which <a href="http://trac.webkit.org/changeset/117147">hides WebM playback capability on YouTube</a>.</p>

<h4 id="faq_placeholderstyle" class="question">Can I change the default style of the placeholders?</h4>
<p class="answer">Yes, you can override any extension’s styles in your user stylesheet (selected in Safari’s Advanced preferences). You only have to make sure that your selectors have higher specificity than those in <a href="https://github.com/hoyois/clicktoplugin/blob/master/ClickToPlugin.safariextension/styles.css">ClickToPlugin’s stylesheet</a>.</p>

<h4 id="airplay_controls" class="question">Can you add more playback controls for AirPlay?</h4>
<p class="answer">No. The ability to stop playback on an AirPlay device is provided by the <a href="http://hoyois.github.io/safariextensions/mediacenter/">Media Center extension</a>. Finer control is not possible from Safari.</p>

<h4 id="playlist_airplay" class="question">Is it possible to send a whole playlist via AirPlay?</h4>
<p class="answer">No, this is not possible for technical reasons. To view a whole playlist on an AirPlay device, each track must be sent separately.</p>

<h4 id="faq_license" class="question">What license is your code under?</h4>
<p class="answer">All my code on GitHub is under the <a href="http://www.wtfpl.net/txt/copying/">WTFPL</a> license.</p>

<h4 id="faq_chrome" class="question">Can you make a Chrome or Firefox version of ClickToPlugin?</h4>
<p class="answer">No.</p>
</section>

<section id="common_issues">
<header>
<h2>Solutions to common issues</h2>
<div class="toplink"><a href="#top">To the top</a></div>
</header>

<h4 id="broken_page">“This web page does not work with ClickToPlugin enabled, but does when ClickToPlugin is disabled. Surely there is a bug in ClickToPlugin!”</h4>

<p>More likely the web page’s functionality relies on a hidden or very small plug-in object which ClickToPlugin blocks. In many cases the “Load All Plug-ins” command is enough to restore the web page to a working state. A permanent solution for all cases is the following. Select the “Block plug-ins manually” checkbox in the preferences and reload the page. For every plug-in object on the page, a dialog will appear: click OK to block the object and Cancel to load it. Use this to find out which objects must be loaded for the page to work, and match their sources (given in the dialogs) using the source whitelist.</p>

<h4 id="youtube_html5">“Flash is not blocked on YouTube anymore!”</h4>

<p>This never has and will never happen. What happens is that YouTube now has its own HTML5 player which looks very similar to its Flash player. The HTML5 player is used instead of the Flash player if you are enrolled in YouTube’s <a href="http://www.youtube.com/html5">HTML5 trial</a>.</p>

<h4 id="html5_video">“No matter how I tweak the setting, I cannot prevent this video from autoplaying!”</h4>

<p>This video is probably an HTML5 video and not a plug-in. Such videos cannot be blocked with ClickToPlugin.</p>

<h4 id="open_in_qtp">“The option to view videos in QuickTime Player does not work!”</h4>

<p>There are two known causes:</p>
<ul>
	<li>Versions 7.7.3 and higher of the QuickTime plug-in are not able to open QuickTime Player anymore. The only known solution is to downgrade the plug-in to version 7.7.1 (which is the version bundled with OS X 10.8).</li>
	<li>Starting from Safari 6.1, plug-in processes are sandboxed by default and this prevents the QuickTime plug-in from opening the QuickTime Player application. To restore that functionality, go to the Security tab in Safari’s preferences, click the “Manage Website Settings” button, select “QuickTime” in the left column, and choose “Run in Unsafe Mode” from the pop-up menu.</li>
</ul>

<h4 id="download_qtp_airplay">“This video cannot be downloaded / viewed in QuickTime Player / viewed on my AirPlay device!”</h4>

<p>This can happen for a variety of reasons over which ClickToPlugin has no control. For example, the server can refuse to respond to requests made from Safari’s downloader or from an Apple TV, and there are video formats that can be played in Safari but not in QuickTime Player or on a given AirPlay device.</p>

<h4 id="ineffective_whitelist">“I whitelisted a page but some plug-ins are still being blocked!”</h4>

<p>This is because a single tab can contain documents whose URLs are different than the URL displayed in the Address Field. To find out the URL of the document containing a blocked object, select the “Block plug-ins manually” checkbox in the preferences, right-click the object’s placeholder, and choose “Get Plug-in Info”.</p>

<h4>“I’ve read this whole page carefully but I still have a problem!”</h4>

<p><a href="#faq_uninstall">Uninstall</a> and reinstall the extension (this will reset the extension’s settings). If that doesn’t fix your problem, then you can <a href="./#contact">contact me</a> and I’ll be happy to help.</p>
</section>

<section id="known_bugs">
<header>
<h2>Known bugs</h2>
<div class="toplink"><a href="#top">To the top</a></div>
</header>

<p>See the <a href="https://github.com/hoyois/clicktoplugin/issues">list of open issues</a> on GitHub.</p>
</section>

<section id="safari_bugs">
<header>
<h2>Safari bugs</h2>
<div class="toplink"><a href="#top">To the top</a></div>
</header>

<p>This is a list of known bugs in the latest release of Safari or in the WebKit nightly builds that affect parts of the extension.</p>

<table>
<thead>
<tr>
	<th>Report</th>
	<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
	<td><a href="https://bugs.webkit.org/show_bug.cgi?id=44023">#44023</a></td>
	<td>The Java plug-in cannot be blocked when embedded via an <code>&lt;applet&gt;</code> element.</td>
</tr>
<tr>
	<td><a href="https://bugs.webkit.org/show_bug.cgi?id=74451">#74451</a></td>
	<td>The presence of any <code>beforeload</code> event listener can break scripts that rely on an image’s <code>load</code> event.</td>
</tr>
<tr>
	<td><a href="http://openradar.appspot.com/radar?id=1305402">rdar://9950247</a></td>
	<td>Listening to <code>message</code> events on <code>safari.self</code> slows down the SunSpider Javascript benchmark significantly.</td>
</tr>
<tr>
	<td><a href="https://bugs.webkit.org/show_bug.cgi?id=23364">#23364</a></td>
	<td>Subpixel antialiasing is disabled in hardware accelerated layers. As soon as a media element starts playing, the text in its controls, in ClickToPlugin’s source selector, and in ClickToPlugin’s preference window will be affected.</td>
</tr>
</tbody>
</table>
</section>

<footer>
<p id="footer_left">Marc Hoyois, <time datetime="2015-07-14">July 14, 2015</time></p>
<p id="footer_right"><a href="#top">To the top</a></p>
<p id="footer_middle"><a href="http://validator.nu/?doc=http%3A%2F%2Fhoyois.github.io%2Fsafariextensions%2Fclicktoplugin%2Fhelp.xhtml">XHTML5</a> • <a href="http://hoyois.github.io/html5outliner/?xml=true&amp;url=http%3A%2F%2Fhoyois.github.io%2Fsafariextensions%2Fclicktoplugin%2Fhelp.xhtml">Outline</a> • <a href="http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fhoyois.github.io%2Fstyles.css&amp;profile=css3&amp;usermedium=all&amp;warning=1">CSS3</a></p>
</footer>

</body>
</html>
